<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Export-Permission.ps1</command:name>
      <command:verb>Export</command:verb>
      <command:noun>Permission.ps1</command:noun>
      <maml:description>
        <maml:para>Create CSV, HTML, and XML reports of permissions</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>Present complex nested permissions and group memberships in a report that is easy to read Provide additional information about each account such as Name, Department, Title Multithreaded with caching for fast results Works as a scheduled task Works as a custom sensor script for Paessler PRTG Network Monitor (Push sensor recommended due to execution time)</maml:para>
      <maml:para>Supports: - Local folder paths</maml:para>
      <maml:para>- UNC folder paths</maml:para>
      <maml:para>- DFS folder paths</maml:para>
      <maml:para>- Mapped network drives</maml:para>
      <maml:para>- Active Directory domain trusts</maml:para>
      <maml:para>- Unresolved SIDs for deleted accounts</maml:para>
      <maml:para>- Group memberships via the Primary Group as well as the memberOf property</maml:para>
      <maml:para></maml:para>
      <maml:para>Does not support these scenarios: - ACL Owners or Groups (ToDo enhancement; for now only the DACL is reported)</maml:para>
      <maml:para>- File permissions (ToDo enhancement; for now only folder permissions are reported)</maml:para>
      <maml:para>- Share permissions (ToDo enhancement; for now only NTFS permissions are reported)</maml:para>
      <maml:para></maml:para>
      <maml:para>Behavior: - Resolves each path in the TargetPath parameter   - Local paths become UNC paths using the administrative shares, so the computer name is shown in reports   - DFS paths become all of their UNC folder targets, including disabled ones   - Mapped network drives become their UNC paths - Gets all permissions for the resolved paths</maml:para>
      <maml:para>- Gets non-inherited permissions for subfolders (if specified)</maml:para>
      <maml:para>- Exports the permissions to a .csv file</maml:para>
      <maml:para>- Uses ADSI to get information about the accounts and groups listed in the permissions</maml:para>
      <maml:para>- Exports information about the accounts and groups to a .csv file</maml:para>
      <maml:para>- Uses ADSI to recursively retrieve group members</maml:para>
      <maml:para>  - Retrieves group members using both the memberOf and primaryGroupId attributes   - Members of nested groups are retrieved as members of the group listed in the permissions.       - Their hierarchy of nested group memberships is not retrieved (for performance reasons). - Exports information about all accounts with access to a .csv file</maml:para>
      <maml:para>- Exports information about all accounts with access to a report generated as a .html file</maml:para>
      <maml:para>- Outputs an XML-formatted list of common misconfigurations for use in Paessler PRTG Network Monitor as a custom XML sensor</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Export-Permission.ps1</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>TargetPath</maml:name>
          <maml:description>
            <maml:para>Path to the NTFS folder whose permissions to export</maml:para>
            <maml:para>Currently supports NTFS folders TODO: support same targets as Get-Acl (AD, Registry, StorageSubSystem)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo[]</command:parameterValue>
          <dev:type>
            <maml:name>System.IO.DirectoryInfo[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
          <maml:name>ThreadCount</maml:name>
          <maml:description>
            <maml:para>Number of asynchronous threads to use Recommended starting with the # of logical CPUs: (Get-CimInstance -ClassName CIM_Processor | Measure-Object -Sum -Property NumberOfLogicalProcessors).Sum</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.UInt16</command:parameterValue>
          <dev:type>
            <maml:name>System.UInt16</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
          <maml:name>PrtgProbe</maml:name>
          <maml:description>
            <maml:para>If all four of the PRTG parameters are specified,</maml:para>
            <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
          <maml:name>PrtgProtocol</maml:name>
          <maml:description>
            <maml:para>If all four of the PRTG parameters are specified,</maml:para>
            <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
          <maml:name>PrtgPort</maml:name>
          <maml:description>
            <maml:para>If all four of the PRTG parameters are specified,</maml:para>
            <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.UInt16</command:parameterValue>
          <dev:type>
            <maml:name>System.UInt16</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>0</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="14" aliases="none">
          <maml:name>PrtgToken</maml:name>
          <maml:description>
            <maml:para>If all four of the PRTG parameters are specified,</maml:para>
            <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="15" aliases="none">
          <maml:name>SplitBy</maml:name>
          <maml:description>
            <maml:para>How to split up the exported files:     none    generate 1 report file with all permissions     target  generate 1 report file per target (default)     item    generate 1 report file per item     account generate 1 report file per account     all     generate 1 report file per target and 1 file per item and 1 file per account and 1 file with all permissions.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Target</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="16" aliases="none">
          <maml:name>GroupBy</maml:name>
          <maml:description>
            <maml:para>How to group the permissions in the output stream and within each exported file</maml:para>
            <maml:para>    SplitBy	GroupBy     none	none	$FlatPermissions all in 1 file     none	account	$AccountPermissions all in 1 file     none	item	$ItemPermissions all in 1 file</maml:para>
            <maml:para>    account	none	1 file per item in $AccountPermissions.  In each file, $_.Access | sort path     account	account	(same as -SplitBy account -GroupBy none)     account	item	1 file per item in $AccountPermissions.  In each file, $_.Access | group item | sort name</maml:para>
            <maml:para>    item	none	1 file per item in $ItemPermissions.  In each file, $_.Access | sort account     item	account	1 file per item in $ItemPermissions.  In each file, $_.Access | group account | sort name     item	item	(same as -SplitBy item -GroupBy none)</maml:para>
            <maml:para>    target	none	1 file per $TargetPath.  In each file, sort ACEs by item path then account name     target	account	1 file per $TargetPath.  In each file, group ACEs by account and sort by account name     target	item	1 file per $TargetPath.  In each file, group ACEs by item and sort by item path     target  target  (same as -SplitBy target -GroupBy none)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Item</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="17" aliases="none">
          <maml:name>FileFormat</maml:name>
          <maml:description>
            <maml:para>File format(s) to export</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Js</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="18" aliases="none">
          <maml:name>OutputFormat</maml:name>
          <maml:description>
            <maml:para>Type of output returned to the output stream</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Passthru</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="19" aliases="none">
          <maml:name>Detail</maml:name>
          <maml:description>
            <maml:para>Level of detail to export to file     0   Item paths     1   Resolved item paths (server names resolved, DFS targets resolved)     2   Expanded resolved item paths (parent paths expanded into children)     3   Access lists     4   Access rules (server names resolved, inheritance flags resolved)     5   Accounts with access     6   Expanded access rules (expanded with account info)     7   Formatted permissions     8   Best Practice issues     9   Custom sensor output for Paessler PRTG Network Monitor     10  Permission Report</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32[]</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>10</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
          <maml:name>ExcludeAccount</maml:name>
          <maml:description>
            <maml:para>Regular expressions matching names of security principals to exclude from the HTML report</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>SYSTEM</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="20" aliases="none">
          <maml:name>InheritanceFlagResolved</maml:name>
          <maml:description>
            <maml:para>String translations indexed by value in the [System.Security.AccessControl.InheritanceFlags] enum Parameter default value is on a single line as a workaround to a PlatyPS bug TODO: Move to i18n</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>@('this folder but not subfolders', 'this folder and subfolders', 'this folder and files, but not subfolders', 'this folder, subfolders, and files')</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="21" aliases="none">
          <maml:name>AccountProperty</maml:name>
          <maml:description>
            <maml:para>Properties of each Account to display on the report (left out: managedby)</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>@('DisplayName', 'Company', 'Department', 'Title', 'Description')</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
          <maml:name>IncludeAccount</maml:name>
          <maml:description>
            <maml:para>Regular expressions matching names of security principals to include in the HTML report</maml:para>
            <maml:para>Only security principals with names matching these regular expressions will be returned</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
          <maml:name>ExcludeClass</maml:name>
          <maml:description>
            <maml:para>Accounts whose objectClass property is in this list are excluded from the HTML report</maml:para>
            <maml:para>Note on the 'group' class:   By default, a group with members is replaced in the report by its members unless the -NoGroupMembers switch is used.   Any remaining groups are empty and not useful to see in the middle of a list of users/job titles/departments/etc).   So the 'group' class is excluded here by default.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>@('group', 'computer')</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
          <maml:name>IgnoreDomain</maml:name>
          <maml:description>
            <maml:para>Domain(s) to ignore (they will be removed from the username)</maml:para>
            <maml:para>Can be used:   to ensure accounts only appear once on the report when they have matching SamAccountNames in multiple domains.   when the domain is often the same and doesn't need to be displayed</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
          <maml:name>OutputDir</maml:name>
          <maml:description>
            <maml:para>Path to the folder to save the logs and reports generated by this script</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>"$env:AppData\Export-Permission"</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
          <maml:name>RecurseDepth</maml:name>
          <maml:description>
            <maml:para>How many levels of children to enumerate</maml:para>
            <maml:para>  Set to 0 to ignore all children   Set to -1 (default) to recurse through all children   Set to any whole number to enumerate that many levels of children</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>-1</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
          <maml:name>Title</maml:name>
          <maml:description>
            <maml:para>Title at the top of the HTML report</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Permissions Report</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
          <maml:name>AccountConvention</maml:name>
          <maml:description>
            <maml:para>Valid accounts that are allowed to appear in ACEs</maml:para>
            <maml:para>Specify as a ScriptBlock meant for the FilterScript parameter of Where-Object</maml:para>
            <maml:para>By default, this is a ScriptBlock that always evaluates to $true so it doesn't evaluate any account convention compliance</maml:para>
            <maml:para>In the ScriptBlock, any account properties are available for evaluation:</maml:para>
            <maml:para>e.g. {$_.DomainNetbios -eq 'CONTOSO'} # Accounts used in ACEs should be in the CONTOSO domain e.g. {$_.Name -eq 'Group23'} # Accounts used in ACEs should be named Group23 e.g. {$ .ResolvedAccountName -like 'CONTOSO\Group1*' -or $ .ResolvedAccountName -eq 'CONTOSO\Group23'}</maml:para>
            <maml:para>The format of the ResolvedAccountName property is CONTOSO\Group1   where     CONTOSO is the NetBIOS name of the domain (the computer name for local accounts)     and     Group1 is the samAccountName of the account</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.ScriptBlock</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.ScriptBlock</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>{ $true }</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Interactive</maml:name>
          <maml:description>
            <maml:para>Open the HTML report after the script is finished using Invoke-Item (only useful interactively)</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoMembers</maml:name>
          <maml:description>
            <maml:para>Do not get group members (only report the groups themselves)</maml:para>
            <maml:para>Note: By default, the -ExcludeClass parameter will exclude groups from the report.   If using -NoGroupMembers, you most likely want to modify the value of -ExcludeClass.   Remove the 'group' class from ExcludeClass in order to see groups on the report.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoProgress</maml:name>
          <maml:description>
            <maml:para>Workaround for https://github.com/PowerShell/PowerShell/issues/20657</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="9" aliases="none">
        <maml:name>AccountConvention</maml:name>
        <maml:description>
          <maml:para>Valid accounts that are allowed to appear in ACEs</maml:para>
          <maml:para>Specify as a ScriptBlock meant for the FilterScript parameter of Where-Object</maml:para>
          <maml:para>By default, this is a ScriptBlock that always evaluates to $true so it doesn't evaluate any account convention compliance</maml:para>
          <maml:para>In the ScriptBlock, any account properties are available for evaluation:</maml:para>
          <maml:para>e.g. {$_.DomainNetbios -eq 'CONTOSO'} # Accounts used in ACEs should be in the CONTOSO domain e.g. {$_.Name -eq 'Group23'} # Accounts used in ACEs should be named Group23 e.g. {$ .ResolvedAccountName -like 'CONTOSO\Group1*' -or $ .ResolvedAccountName -eq 'CONTOSO\Group23'}</maml:para>
          <maml:para>The format of the ResolvedAccountName property is CONTOSO\Group1   where     CONTOSO is the NetBIOS name of the domain (the computer name for local accounts)     and     Group1 is the samAccountName of the account</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.ScriptBlock</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ScriptBlock</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>{ $true }</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="21" aliases="none">
        <maml:name>AccountProperty</maml:name>
        <maml:description>
          <maml:para>Properties of each Account to display on the report (left out: managedby)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>@('DisplayName', 'Company', 'Department', 'Title', 'Description')</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="19" aliases="none">
        <maml:name>Detail</maml:name>
        <maml:description>
          <maml:para>Level of detail to export to file     0   Item paths     1   Resolved item paths (server names resolved, DFS targets resolved)     2   Expanded resolved item paths (parent paths expanded into children)     3   Access lists     4   Access rules (server names resolved, inheritance flags resolved)     5   Accounts with access     6   Expanded access rules (expanded with account info)     7   Formatted permissions     8   Best Practice issues     9   Custom sensor output for Paessler PRTG Network Monitor     10  Permission Report</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32[]</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>10</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none">
        <maml:name>ExcludeAccount</maml:name>
        <maml:description>
          <maml:para>Regular expressions matching names of security principals to exclude from the HTML report</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>SYSTEM</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none">
        <maml:name>ExcludeClass</maml:name>
        <maml:description>
          <maml:para>Accounts whose objectClass property is in this list are excluded from the HTML report</maml:para>
          <maml:para>Note on the 'group' class:   By default, a group with members is replaced in the report by its members unless the -NoGroupMembers switch is used.   Any remaining groups are empty and not useful to see in the middle of a list of users/job titles/departments/etc).   So the 'group' class is excluded here by default.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>@('group', 'computer')</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="17" aliases="none">
        <maml:name>FileFormat</maml:name>
        <maml:description>
          <maml:para>File format(s) to export</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Js</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="16" aliases="none">
        <maml:name>GroupBy</maml:name>
        <maml:description>
          <maml:para>How to group the permissions in the output stream and within each exported file</maml:para>
          <maml:para>    SplitBy	GroupBy     none	none	$FlatPermissions all in 1 file     none	account	$AccountPermissions all in 1 file     none	item	$ItemPermissions all in 1 file</maml:para>
          <maml:para>    account	none	1 file per item in $AccountPermissions.  In each file, $_.Access | sort path     account	account	(same as -SplitBy account -GroupBy none)     account	item	1 file per item in $AccountPermissions.  In each file, $_.Access | group item | sort name</maml:para>
          <maml:para>    item	none	1 file per item in $ItemPermissions.  In each file, $_.Access | sort account     item	account	1 file per item in $ItemPermissions.  In each file, $_.Access | group account | sort name     item	item	(same as -SplitBy item -GroupBy none)</maml:para>
          <maml:para>    target	none	1 file per $TargetPath.  In each file, sort ACEs by item path then account name     target	account	1 file per $TargetPath.  In each file, group ACEs by account and sort by account name     target	item	1 file per $TargetPath.  In each file, group ACEs by item and sort by item path     target  target  (same as -SplitBy target -GroupBy none)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Item</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="5" aliases="none">
        <maml:name>IgnoreDomain</maml:name>
        <maml:description>
          <maml:para>Domain(s) to ignore (they will be removed from the username)</maml:para>
          <maml:para>Can be used:   to ensure accounts only appear once on the report when they have matching SamAccountNames in multiple domains.   when the domain is often the same and doesn't need to be displayed</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none">
        <maml:name>IncludeAccount</maml:name>
        <maml:description>
          <maml:para>Regular expressions matching names of security principals to include in the HTML report</maml:para>
          <maml:para>Only security principals with names matching these regular expressions will be returned</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="20" aliases="none">
        <maml:name>InheritanceFlagResolved</maml:name>
        <maml:description>
          <maml:para>String translations indexed by value in the [System.Security.AccessControl.InheritanceFlags] enum Parameter default value is on a single line as a workaround to a PlatyPS bug TODO: Move to i18n</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>@('this folder but not subfolders', 'this folder and subfolders', 'this folder and files, but not subfolders', 'this folder, subfolders, and files')</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Interactive</maml:name>
        <maml:description>
          <maml:para>Open the HTML report after the script is finished using Invoke-Item (only useful interactively)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoMembers</maml:name>
        <maml:description>
          <maml:para>Do not get group members (only report the groups themselves)</maml:para>
          <maml:para>Note: By default, the -ExcludeClass parameter will exclude groups from the report.   If using -NoGroupMembers, you most likely want to modify the value of -ExcludeClass.   Remove the 'group' class from ExcludeClass in order to see groups on the report.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoProgress</maml:name>
        <maml:description>
          <maml:para>Workaround for https://github.com/PowerShell/PowerShell/issues/20657</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="6" aliases="none">
        <maml:name>OutputDir</maml:name>
        <maml:description>
          <maml:para>Path to the folder to save the logs and reports generated by this script</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>"$env:AppData\Export-Permission"</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="18" aliases="none">
        <maml:name>OutputFormat</maml:name>
        <maml:description>
          <maml:para>Type of output returned to the output stream</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Passthru</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="13" aliases="none">
        <maml:name>PrtgPort</maml:name>
        <maml:description>
          <maml:para>If all four of the PRTG parameters are specified,</maml:para>
          <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.UInt16</command:parameterValue>
        <dev:type>
          <maml:name>System.UInt16</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>0</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="11" aliases="none">
        <maml:name>PrtgProbe</maml:name>
        <maml:description>
          <maml:para>If all four of the PRTG parameters are specified,</maml:para>
          <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="12" aliases="none">
        <maml:name>PrtgProtocol</maml:name>
        <maml:description>
          <maml:para>If all four of the PRTG parameters are specified,</maml:para>
          <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="14" aliases="none">
        <maml:name>PrtgToken</maml:name>
        <maml:description>
          <maml:para>If all four of the PRTG parameters are specified,</maml:para>
          <maml:para>the results will be XML-formatted and pushed to the specified PRTG probe for a push sensor</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="7" aliases="none">
        <maml:name>RecurseDepth</maml:name>
        <maml:description>
          <maml:para>How many levels of children to enumerate</maml:para>
          <maml:para>  Set to 0 to ignore all children   Set to -1 (default) to recurse through all children   Set to any whole number to enumerate that many levels of children</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>-1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="15" aliases="none">
        <maml:name>SplitBy</maml:name>
        <maml:description>
          <maml:para>How to split up the exported files:     none    generate 1 report file with all permissions     target  generate 1 report file per target (default)     item    generate 1 report file per item     account generate 1 report file per account     all     generate 1 report file per target and 1 file per item and 1 file per account and 1 file with all permissions.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Target</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>TargetPath</maml:name>
        <maml:description>
          <maml:para>Path to the NTFS folder whose permissions to export</maml:para>
          <maml:para>Currently supports NTFS folders TODO: support same targets as Get-Acl (AD, Registry, StorageSubSystem)</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.IO.DirectoryInfo[]</command:parameterValue>
        <dev:type>
          <maml:name>System.IO.DirectoryInfo[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="10" aliases="none">
        <maml:name>ThreadCount</maml:name>
        <maml:description>
          <maml:para>Number of asynchronous threads to use Recommended starting with the # of logical CPUs: (Get-CimInstance -ClassName CIM_Processor | Measure-Object -Sum -Property NumberOfLogicalProcessors).Sum</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.UInt16</command:parameterValue>
        <dev:type>
          <maml:name>System.UInt16</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>1</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="8" aliases="none">
        <maml:name>Title</maml:name>
        <maml:description>
          <maml:para>Title at the top of the HTML report</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Permissions Report</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>[System.IO.DirectoryInfo[]] TargetPath parameter</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
      <command:inputType>
        <dev:type>
          <maml:name>Strings can be passed to this parameter and will be re-cast as DirectoryInfo objects.</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>[PSCustomObject] Items, permissions, and accounts formatted according to specified parameters.</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>This code has not been reviewed or audited by a third party</maml:para>
        <maml:para>This code has limited or no tests</maml:para>
        <maml:para>It was designed for presenting reports to non-technical management or administrative staff</maml:para>
        <maml:para>It is convenient for that purpose but it is not recommended for compliance reporting or similar formal uses</maml:para>
        <maml:para>ToDo bugs/enhancements: https://github.com/IMJLA/Export-Permission/issues</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -ExcludeAccount 'BUILTIN\\Administrator'</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Exclude the built-in Administrator account from the HTML report</maml:para>
          <maml:para>The ExcludeAccount parameter uses RegEx, so the \ in BUILTIN\Administrator needed to be escaped.</maml:para>
          <maml:para>The RegEx escape character is \ so the regular expression needed for the parameter is 'BUILTIN\\Administrator'</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -ExcludeAccount @(
    'BUILTIN\\Administrators',
    'BUILTIN\\Administrator',
    'CREATOR OWNER',
    'NT AUTHORITY\\SYSTEM'
)</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Exclude from the HTML report: - The built-in Administrator account</maml:para>
          <maml:para>- The built-in Administrators group and its members (unless they appear elsewhere in the permissions)</maml:para>
          <maml:para>- The CREATOR OWNER security principal</maml:para>
          <maml:para>- The computer account (NT AUTHORITY\SYSTEM)</maml:para>
          <maml:para></maml:para>
          <maml:para>Note: CREATOR OWNER will still be reported as an alarm in the PRTG XML output</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -ExcludeClass @('computer')</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Include empty groups on the HTML report (rather than the default setting which would exclude computers and groups)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -NoGroupMembers -ExcludeClass @('computer')</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test</maml:para>
          <maml:para>Do not spend time retrieving group members</maml:para>
          <maml:para>Include groups on the report, but exclude computers (rather than the default setting which would exclude computers and groups)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -IgnoreDomain 'CONTOSO'</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Remove the CONTOSO domain prefix from associated accounts and groups</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -IgnoreDomain 'CONTOSO1','CONTOSO2'</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Remove the CONTOSO1\ and CONTOSO2\ domain prefixes from associated accounts and groups</maml:para>
          <maml:para>Across the two domains, accounts with the same samAccountNames will be considered equivalent</maml:para>
          <maml:para>Across the two domains, groups with the same Names will be considered equivalent</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 8 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -LogDir C:\Logs</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Redirect logs and output files to C:\Logs instead of the default location in AppData</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 9 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -RecurseDepth 0</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test only (no subfolders)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 10 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -RecurseDepth 2</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test</maml:para>
          <maml:para>Only include subfolders to a maximum of 2 levels deep (C:\Test\Level1\Level2)</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 11 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath C:\Test -Title 'New Custom Report Title'</dev:code>
        <dev:remarks>
          <maml:para>Generate reports on the NTFS permissions for the folder C:\Test and all subfolders</maml:para>
          <maml:para>Change the title of the HTML report to 'New Custom Report Title'</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 12 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace\DfsFolderWithTarget'</dev:code>
        <dev:remarks>
          <maml:para>The target path is a DFS folder with folder targets</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the DFS folder targets associated with this path</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 13 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace\DfsFolderWithoutTarget\DfsSubfolderWithoutTarget\DfsSubfolderWithTarget'</dev:code>
        <dev:remarks>
          <maml:para>The target path is a DFS subfolder with folder targets</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the DFS folder targets associated with this path</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 14 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace\DfsFolderWithoutTarget\DfsSubfolderWithoutTarget\DfsSubfolderWithTarget\Subfolder'</dev:code>
        <dev:remarks>
          <maml:para>The target path is a subfolder of a DFS subfolder with folder targets</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the DFS folder targets associated with this path</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 15 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\'</dev:code>
        <dev:remarks>
          <maml:para>This is an edge case that is not currently supported</maml:para>
          <maml:para>The target path is the root of an AD domain</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the root of an AD domain.  TODO: param validation? or otherwise handle error.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 16 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\computer.ad.contoso.com\'</dev:code>
        <dev:remarks>
          <maml:para>This is an edge case that is not currently supported</maml:para>
          <maml:para>The target path is the root of a SMB server</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the root of a SMB server.  TODO: param validation? or otherwise handle error.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 17 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace'</dev:code>
        <dev:remarks>
          <maml:para>This is an edge case that is not currently supported</maml:para>
          <maml:para>The target path is a DFS namespace</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the folder on the DFS namespace server associated with this path</maml:para>
          <maml:para>Add a warning that they are permissions from the DFS namespace server and could be confusing</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 18 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace\DfsFolderWithoutTarget'</dev:code>
        <dev:remarks>
          <maml:para>This is an edge case that is not currently supported.</maml:para>
          <maml:para>The target path is a DFS folder without a folder target</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the folder on the DFS namespace server associated with this path</maml:para>
          <maml:para>Add a warning that they are permissions from the DFS namespace server and could be confusing</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-------------------------- EXAMPLE 19 --------------------------</maml:title>
        <dev:code>Export-Permission.ps1 -TargetPath '\\ad.contoso.com\DfsNamespace\DfsFolderWithoutTarget\DfsSubfolderWithoutTarget'</dev:code>
        <dev:remarks>
          <maml:para>This is an edge case that is not currently supported.</maml:para>
          <maml:para>The target path is a DFS subfolder without a folder target.</maml:para>
          <maml:para>Generate reports on the NTFS permissions for the folder on the DFS namespace server associated with this path</maml:para>
          <maml:para>Add a warning that they are permissions from the DFS namespace server and could be confusing</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks />
  </command:command>
</helpItems>